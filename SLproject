package project;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.Scanner;

public class whatever {
	
	public static void main(String[] args) throws IOException {
		whatever project = new whatever();
		project.helloMessage();
		project.myProject();
	    project.userChoice(getOption());
	    
	    project.GetUserInput();
	}
	
	private ArrayList<String> choice = new ArrayList<>();

    public void myProject() {
    	
    	choice.add("1. Add a new file");
    	choice.add("2. Delete a File");
    	choice.add("3. Search for a file");
    	choice.add("4. Exit");

    	
        for (String i : choice) {
            System.out.println(i);
          }
//        System.out.println("");
    }
    
    public void helloMessage() {
    	System.out.println("Hello and welcome to LockedMe.com");
        System.out.println("");

    }
    
    public void Show() {
    	System.out.println("Menu");
    	
        for (String s : choice) {
            System.out.println(s);
        }
    }
    
    public void userInput() throws IOException {
        int selected;
        while ((selected = this.Scan()) != 4) {
            this.userChoice(selected);
        }
    }
    
    public void userChoice(int select) throws IOException {
        
    	switch(select) {

            case 1: 
                //Add a new file here
                this.NewFile();
                this.Show();
                break;
            case 2: 
            	// Delete file here
            	this.DeleteFile();
            	this.Show();
                break;
            case 3: 
            	// search here
            	this.SearchFile();
            	this.Show();
                break;
            case 4: 
        		whatever project = new whatever();
        		project.exit();
//                break;
              
            default:
                System.out.println("Wrong input");
                break;   
        }
    }
//
    public void exit() {
    	System.exit(getOption());
    }
    
    
    private int Scan() {
        Scanner i = new Scanner(System.in);

        int returnOption = 0;
        try {
            returnOption = i.nextInt();
        }
        catch (InputMismatchException ex) {
        	System.out.println("Invalid input");
        }
        return returnOption;

    }
    
    private String userIput() {

        Scanner i = new Scanner(System.in);
        return(i.nextLine());

    }
    
    public void NewFile() throws IOException {

File f1 = new File("myFolder");
		
		System.out.println("Enter the file name: ");

        String fileName = this.userIput();
		
		File f2 = new File("myFolder/fileName.txt");
		
//		f1.mkdir();
		f2.createNewFile();
		
		System.out.println("You are adding a file named: " + fileName);
    	try {
    	      File myObj = new File(fileName);
    	      if (myObj.createNewFile()) {
    	        System.out.println("File name is " + myObj.getName());
    	      } else {
    	        System.out.println("File already exist");
    	      }
    	    } catch (IOException e) {
    	      System.out.println("Error!");
    	    }
		System.out.println("File has been created");	    	    	
    }
    
    public void DeleteFile() {	
		System.out.println("Enter the file name: ");

        String fileName = this.userIput();
        
    	 File file = new File("D:\\Eclipse\\MyFirstJava\\fileName.txt"); // change path

	     if (file.delete()) {
	         System.out.println("File has been deleted ");
	     }
	     else {
	         System.out.println("File doesn't exist!");
	     }
    	
    }
    
   public void SearchFile() {
	   
		System.out.println("Search for a file by name: ");

        String fileName = this.userIput();
        
    	 File file = new File("D:\\Eclipse\\MyFirstJava\\fileName.txt"); // Change path

	     if (file != null) {
	         System.out.println("File does exist");
	     }
	     else if(file == null) {
	         System.out.println("File doesn't exist!");
	     }
	   
    }

    public void GetUserInput() throws IOException {
        int selectedOption;
        while ((selectedOption = this.getOption()) != 4) {
            this.userChoice(selectedOption);
        }
    }
    
    private static int getOption() {
        Scanner in = new Scanner(System.in);

        int returnOption = 0;
        try {
            returnOption = in.nextInt();
        }
        catch (InputMismatchException ex) {
        	System.out.println("Please try again.");
        }
        return returnOption;

    }

	
}
